@import '../mixins/button'

.el- {
  &button {
    appearance: none
    -webkit-appearance: none

    display: inline-block
    margin: 0
    text-align: center
    line-height: 1
    white-space: nowrap
    cursor: pointer
    user-select: none
    outline: none

    button-variant: $button-default-color, $button-default-fill, $button-default-border-color
    button-size: $button-padding-vertical, $button-padding-horizontal, $button-font-size, $button-border-radius

    & + .el-button {
      margin-left: $button-spacing
    }

    & [class*="el-icon-"] {
      & + span {
        margin-left: $gap-xsmall
      }
    }

    &.is-disabled {
      &,
      &:hover,
      &:focus {
        color: $button-disabled-color
        cursor: not-allowed
        background-image: none
        background-color: $button-disabled-fill
        border-color: $button-disabled-border
      }

      &.el-button--text {
        background-color: transparent
      }

      &.is-plain {
        &,
        &:hover,
        &:focus {
          background-color: $color-white
          border-color: $color-base-gray
          color: $color-extra-light-silver
        }
      }
    }

    &.is-loading {
      position: relative
      pointer-events: none

      &:before {
        pointer-events: none
        content: ''
        position: absolute
        left: -1px
        top: -1px
        right: -1px
        bottom: -1px
        border-radius: inherit
        background-color: rgba(255,255,255,.35)
      }
    }

    for $id, $variant in $button-variants {
      &--{$id} {
        button-variant: $variant.color, $variant.fill, $variant.border-color
      }
    }

    for $id, $size in $button-sizes {
      &--{$id} {
        button-size: $size.padding-vertical, $size.padding-horizontal, $size.font-size, $button-border-radius
      }
    }

    &--text {
      border: none
      color: $color-primary
      background: transparent
      padding-left: 0
      padding-right: 0

      &:hover,
      &:focus {
        color: tint($color-primary, $button-hover-tint-percent)
      }
      &:active {
        color: shade($color-primary, $button-active-shade-percent)
      }
    }
  }

  &button-group {
    flex-layout: row

    & .el-button {
      flex: 1

      & + .el-button {
        margin-left: 0
      }

      &:first-child {
        border-top-right-radius: 0
        border-bottom-right-radius: 0
      }
      &:last-child {
        border-top-left-radius: 0
        border-bottom-left-radius: 0
      }
      &:not(:first-child):not(:last-child) {
        border-radius: 0
      }
      &:not(:last-child) {
        margin-right: -1px
      }

      &:hover,
      &:focus,
      &:active {
        z-index: 1
      }

      &.is-active {
        z-index: 1
      }
    }

    for $type in primary success warning danger info {
      .el-button--{$type} {
        &:first-child {
          border-right-color: rgba($color-white, 0.5)
        }
        &:last-child {
          border-left-color: rgba($color-white, 0.5)
        }
        &:not(:first-child):not(:last-child) {
          border-left-color: rgba($color-white, 0.5)
          border-right-color: rgba($color-white, 0.5)
        }
      }
    }
  }
}
